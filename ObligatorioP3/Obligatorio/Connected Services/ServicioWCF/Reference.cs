//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Obligatorio.ServicioWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoUsuario", Namespace="http://schemas.datacontract.org/2004/07/ServicioWCF")]
    [System.SerializableAttribute()]
    public partial class DtoUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioWCF.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/GetTodosLosUsuarios", ReplyAction="http://tempuri.org/IServicio/GetTodosLosUsuariosResponse")]
        Obligatorio.ServicioWCF.DtoUsuario[] GetTodosLosUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/GetTodosLosUsuarios", ReplyAction="http://tempuri.org/IServicio/GetTodosLosUsuariosResponse")]
        System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario[]> GetTodosLosUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/InsertarUsuario", ReplyAction="http://tempuri.org/IServicio/InsertarUsuarioResponse")]
        bool InsertarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/InsertarUsuario", ReplyAction="http://tempuri.org/IServicio/InsertarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> InsertarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/FindById", ReplyAction="http://tempuri.org/IServicio/FindByIdResponse")]
        Obligatorio.ServicioWCF.DtoUsuario FindById(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/FindById", ReplyAction="http://tempuri.org/IServicio/FindByIdResponse")]
        System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario> FindByIdAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/FindByName", ReplyAction="http://tempuri.org/IServicio/FindByNameResponse")]
        Obligatorio.ServicioWCF.DtoUsuario[] FindByName(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/FindByName", ReplyAction="http://tempuri.org/IServicio/FindByNameResponse")]
        System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario[]> FindByNameAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/EliminarUsuario", ReplyAction="http://tempuri.org/IServicio/EliminarUsuarioResponse")]
        bool EliminarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/EliminarUsuario", ReplyAction="http://tempuri.org/IServicio/EliminarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarUsuario", ReplyAction="http://tempuri.org/IServicio/ModificarUsuarioResponse")]
        bool ModificarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarUsuario", ReplyAction="http://tempuri.org/IServicio/ModificarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : Obligatorio.ServicioWCF.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<Obligatorio.ServicioWCF.IServicio>, Obligatorio.ServicioWCF.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Obligatorio.ServicioWCF.DtoUsuario[] GetTodosLosUsuarios() {
            return base.Channel.GetTodosLosUsuarios();
        }
        
        public System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario[]> GetTodosLosUsuariosAsync() {
            return base.Channel.GetTodosLosUsuariosAsync();
        }
        
        public bool InsertarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.InsertarUsuario(usr);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.InsertarUsuarioAsync(usr);
        }
        
        public Obligatorio.ServicioWCF.DtoUsuario FindById(string email) {
            return base.Channel.FindById(email);
        }
        
        public System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario> FindByIdAsync(string email) {
            return base.Channel.FindByIdAsync(email);
        }
        
        public Obligatorio.ServicioWCF.DtoUsuario[] FindByName(string email) {
            return base.Channel.FindByName(email);
        }
        
        public System.Threading.Tasks.Task<Obligatorio.ServicioWCF.DtoUsuario[]> FindByNameAsync(string email) {
            return base.Channel.FindByNameAsync(email);
        }
        
        public bool EliminarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.EliminarUsuario(usr);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.EliminarUsuarioAsync(usr);
        }
        
        public bool ModificarUsuario(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.ModificarUsuario(usr);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(Obligatorio.ServicioWCF.DtoUsuario usr) {
            return base.Channel.ModificarUsuarioAsync(usr);
        }
    }
}
